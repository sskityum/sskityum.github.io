{"version":3,"sources":["context/herokuContext.js","components/AddNote.js","components/Note.js","components/NoteList.js","App.js","context/types.js","context/herokuReducer.js","context/HerokuState.js","index.js"],"names":["HerokuContext","createContext","AddNote","useContext","note","addNote","inputChange","inputReset","onSubmit","e","preventDefault","title","trim","className","type","name","placeholder","onChange","target","value","Note","index","removeNote","editNote","setStrikeUnstrike","style","display","justifyContent","width","textAlign","cursor","onClick","completed","textDecoration","opacity","role","aria-label","marginRight","id","NoteList","notes","loading","fetchNotes","useEffect","length","map","App","SHOW_LOADER","FETCH_NOTES","REMOVE_NOTE","ADD_NOTE","START_EDIT_NOTE","SAVE_EDITABLE_NOTE","INP_CHANGE","INP_RES","handlers","state","payload","filter","editing","herokuReducer","action","DEFAULT","url","process","HerokuState","children","useReducer","dispatch","showLoader","a","fetch","response","ok","json","data","Error","message","method","headers","urlAddEdit","body","JSON","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5df9496.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const HerokuContext = createContext();\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { HerokuContext } from \"../context/herokuContext\";\r\n\r\nexport const AddNote = () => {\r\n  const { note, addNote, inputChange, inputReset } = useContext(HerokuContext);\r\n\r\n  const handleChange = (e) => {\r\n    inputChange(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (note.title.trim()) {\r\n      addNote();\r\n    }\r\n    inputReset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          className=\"form-control\"\r\n          placeholder=\"add here ...\"\r\n          onChange={handleChange}\r\n          value={note.title}\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { HerokuContext } from \"../context/herokuContext\";\r\n\r\nexport const Note = ({ note, index }) => {\r\n  const { removeNote, editNote, setStrikeUnstrike } = useContext(HerokuContext);\r\n\r\n  return (\r\n    <li\r\n      className=\"list-group-item\"\r\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      key={index}\r\n    >\r\n      <ul className=\"list-group list-group-horizontal\" style={{ width: \"90%\" }}>\r\n        <li\r\n          className=\"list-group-item\"\r\n          style={{ width: \"4rem\", textAlign: \"center\" }}\r\n        >\r\n          <small>{index + 1}</small>\r\n        </li>\r\n        <li\r\n          className=\"list-group-item\"\r\n          style={{ width: \"100%\", cursor: \"pointer\" }}\r\n          onClick={() => setStrikeUnstrike(note)}\r\n        >\r\n          {note.completed ? (\r\n            <strong style={{ textDecoration: \"line-through\", opacity: 0.2 }}>\r\n              {note.title}\r\n            </strong>\r\n          ) : (\r\n            <strong>{note.title}</strong>\r\n          )}\r\n        </li>\r\n      </ul>\r\n      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => editNote(note)}\r\n          style={{ marginRight: \"3px\" }}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n          onClick={() => removeNote(note.id)}\r\n        >\r\n          Del\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { HerokuContext } from \"../context/herokuContext\";\r\nimport { Note } from \"./Note\";\r\n\r\nexport const NoteList = () => {\r\n  const { notes, loading, fetchNotes } = useContext(HerokuContext);\r\n  useEffect(() => {\r\n    fetchNotes();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {loading ? (\r\n        <p className=\"h3\">loading ...</p>\r\n      ) : notes.length ? (\r\n        notes.map((note, index) => {\r\n          return <Note note={note} index={index} key={index} />;\r\n        })\r\n      ) : (\r\n        <p className=\"h3\">all tasks completed ...</p>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { AddNote } from \"./components/AddNote\";\r\n\r\nimport { NoteList } from \"./components/NoteList\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          <p className=\"h3\" style={{ textAlign: \"right\" }}>\r\n            djang + react\r\n          </p>\r\n        </div>\r\n        <div className=\"col-7\">\r\n          <p className=\"h3\">\"to-do-шка\"</p>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <AddNote />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <NoteList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const SHOW_LOADER = \"SHOW_LOADER\";\r\nexport const FETCH_NOTES = \"FETCH_NOTES\";\r\nexport const REMOVE_NOTE = \"REMOVE_NOTE\";\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\nexport const START_EDIT_NOTE = \"START_EDIT_NOTE\";\r\nexport const SAVE_EDITABLE_NOTE = \"SAVE_EDITABLE_NOTE\";\r\nexport const INP_CHANGE = \"INP_CHANGE\";\r\nexport const INP_RES = \"INP_RES\";\r\nexport const SET_STRIKE_UNSTRIKE = \"SET_STRIKE_UNSTRIKE\";\r\n","import {\r\n  ADD_NOTE,\r\n  FETCH_NOTES,\r\n  INP_CHANGE,\r\n  REMOVE_NOTE,\r\n  INP_RES,\r\n  SHOW_LOADER,\r\n  START_EDIT_NOTE,\r\n  SAVE_EDITABLE_NOTE,\r\n} from \"./types\";\r\n\r\nconst handlers = {\r\n  [SHOW_LOADER]: (state) => ({ ...state, loading: true }),\r\n  [FETCH_NOTES]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: payload,\r\n    loading: false,\r\n  }),\r\n  [REMOVE_NOTE]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: state.notes.filter((note) => note.id !== payload),\r\n    loading: false,\r\n  }),\r\n  [ADD_NOTE]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: [...state.notes, { ...payload }],\r\n    loading: false,\r\n  }),\r\n  [INP_CHANGE]: (state, { payload }) => ({\r\n    ...state,\r\n    note: { ...state.note, title: payload },\r\n  }),\r\n  [INP_RES]: (state) => ({\r\n    ...state,\r\n    note: {\r\n      id: null,\r\n      title: \"\",\r\n      completed: false,\r\n    },\r\n  }),\r\n  [START_EDIT_NOTE]: (state, { payload }) => ({\r\n    ...state,\r\n    note: {\r\n      id: payload.id,\r\n      title: payload.title,\r\n      completed: payload.completed,\r\n    },\r\n    editing: true,\r\n  }),\r\n  [SAVE_EDITABLE_NOTE]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: state.notes.map((note) =>\r\n      note.id === payload.id ? (note = payload) : note\r\n    ),\r\n    loading: false,\r\n    editing: false,\r\n  }),\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const herokuReducer = (state, action) => {\r\n  const handle = handlers[action.type] || action.DEFAULT;\r\n  return handle(state, action);\r\n};\r\n","import React, { useReducer } from \"react\";\r\n\r\nimport { HerokuContext } from \"./herokuContext\";\r\nimport { herokuReducer } from \"./herokuReducer\";\r\nimport {\r\n  ADD_NOTE,\r\n  FETCH_NOTES,\r\n  INP_CHANGE,\r\n  REMOVE_NOTE,\r\n  INP_RES,\r\n  SHOW_LOADER,\r\n  START_EDIT_NOTE,\r\n  SAVE_EDITABLE_NOTE,\r\n} from \"./types\";\r\n\r\nconst url = process.env.REACT_APP_NET_DB;\r\n\r\nexport const HerokuState = ({ children }) => {\r\n  const initState = {\r\n    notes: [],\r\n    note: {\r\n      id: null,\r\n      title: \"\",\r\n      completed: false,\r\n    },\r\n    loading: false,\r\n    editing: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(herokuReducer, initState);\r\n\r\n  const showLoader = () => dispatch({ type: SHOW_LOADER });\r\n\r\n  const fetchNotes = async () => {\r\n    showLoader();\r\n    try {\r\n      const response = await fetch(`${url}/api/task-list/`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const payload = data.map((note) => {\r\n          return note;\r\n        });\r\n        dispatch({\r\n          type: FETCH_NOTES,\r\n          payload,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      throw new Error(err.message);\r\n    }\r\n  };\r\n\r\n  const removeNote = async (id) => {\r\n    showLoader();\r\n    await fetch(`${url}/api/task-delete/${id}/`, {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    dispatch({\r\n      type: REMOVE_NOTE,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const addNote = async () => {\r\n    showLoader();\r\n\r\n    let urlAddEdit = `${url}/api/task-create/`;\r\n\r\n    if (state.editing) {\r\n      urlAddEdit = `${url}/api/task-update/${state.note.id}/`;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(urlAddEdit, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(state.note),\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const payload = data;\r\n        if (state.editing) {\r\n          dispatch({\r\n            type: SAVE_EDITABLE_NOTE,\r\n            payload,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: ADD_NOTE,\r\n            payload,\r\n          });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      throw new Error(err.message);\r\n    }\r\n  };\r\n\r\n  const inputChange = (value) => {\r\n    dispatch({\r\n      type: INP_CHANGE,\r\n      payload: value,\r\n    });\r\n  };\r\n\r\n  const inputReset = () => {\r\n    dispatch({ type: INP_RES });\r\n  };\r\n\r\n  const editNote = (note) => {\r\n    dispatch({ type: START_EDIT_NOTE, payload: note });\r\n  };\r\n\r\n  const setStrikeUnstrike = async (note) => {\r\n    note.completed = !note.completed;\r\n    const response = await fetch(`${url}/api/task-update/${note.id}/`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ completed: note.completed, title: note.title }),\r\n    });\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      const payload = data;\r\n      dispatch({\r\n        type: SAVE_EDITABLE_NOTE,\r\n        payload,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HerokuContext.Provider\r\n      value={{\r\n        note: state.note,\r\n        notes: state.notes,\r\n        loading: state.loading,\r\n        fetchNotes,\r\n        removeNote,\r\n        addNote,\r\n        inputChange,\r\n        inputReset,\r\n        editNote,\r\n        setStrikeUnstrike,\r\n      }}\r\n    >\r\n      {children}\r\n    </HerokuContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./style.scss\";\r\nimport { App } from \"./App\";\r\nimport { HerokuState } from \"./context/HerokuState\";\r\n\r\nReactDOM.render(\r\n  <HerokuState>\r\n    <App />\r\n  </HerokuState>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}